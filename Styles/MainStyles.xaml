<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:WpfHelpers.Controls">
    <BooleanToVisibilityConverter x:Key="WpfHelpers_BooleanToVisibilityConverter" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="Transparent" />
    <Color x:Key="GlyphColor">#FF444444</Color>
    <Style x:Key="SuccessMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#00BB00" />
    </Style>
    <Style x:Key="ErrorMessage" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#DD0000" />
    </Style>
    <Style x:Key="TextBlockBox"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <ScrollViewer Name="PART_ContentHost"
                                      Background="{TemplateBinding Background}" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Make TextBox look like TextBlock when disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="c:DropDownButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:DropDownButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Button"
                                Command="{Binding Command, RelativeSource={RelativeSource TemplatedParent}}"
                                CommandParameter="{Binding CommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                CommandTarget="{Binding CommandTarget, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter />
                        </Button>
                        <ToggleButton x:Name="PART_DropDownButton"
                                      Grid.Column="1"
                                      Focusable="false"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Visibility="{Binding IsDropDownEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WpfHelpers_BooleanToVisibilityConverter}}"
                                      Margin="1,0,0,0">
                            <Path HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z" >
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>
                            </Path>
                        </ToggleButton>
                        <Popup Placement="Bottom"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="Slide"
                               FocusManager.IsFocusScope="False">
                            <Border x:Name="PART_DropDownHost" BorderBrush="#FF444444" BorderThickness="1" Background="White">
                                
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
